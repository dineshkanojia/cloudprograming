#pragma checksum "E:\Personal\NCI\Assignment\CPP\Resturant\ResturantApp\ResturantApp\ResturantApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5273422ee71cf144967ed1790b105bac7a1e06e2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Personal\NCI\Assignment\CPP\Resturant\ResturantApp\ResturantApp\ResturantApp\Views\_ViewImports.cshtml"
using ResturantApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Personal\NCI\Assignment\CPP\Resturant\ResturantApp\ResturantApp\ResturantApp\Views\_ViewImports.cshtml"
using ResturantApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5273422ee71cf144967ed1790b105bac7a1e06e2", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2e1bc8cb96351d68858fe9ee1c99e24c131d7d73", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Tuple<IEnumerable<Resturant.Common.Customers>, IEnumerable<Resturant.Common.Items>, IEnumerable<Resturant.Common.PaymentTypes>>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 4 "E:\Personal\NCI\Assignment\CPP\Resturant\ResturantApp\ResturantApp\ResturantApp\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<fieldset>\r\n    <legend>\r\n        Resturant\r\n    </legend>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <div class=\"form-group\">\r\n                    Customer ");
#nullable restore
#line 16 "E:\Personal\NCI\Assignment\CPP\Resturant\ResturantApp\ResturantApp\ResturantApp\Views\Home\Index.cshtml"
                        Write(Html.DropDownList("Customer", new SelectList(Model.Item1, "CustomerId", "CustomerName"), new { @class = "form-control" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div class=\"form-group\">\r\n                    Payment Types ");
#nullable restore
#line 21 "E:\Personal\NCI\Assignment\CPP\Resturant\ResturantApp\ResturantApp\ResturantApp\Views\Home\Index.cshtml"
                             Write(Html.DropDownList("Payment", new SelectList(Model.Item3, "PaymentTyepId", "PaymentTypeName"), new { @class = "form-control" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                </div>
            </div>
            <div class=""col-md-4"">
                <div class=""form-group"">
                    Total <input style=""text-align:right"" type=""text"" readonly id=""txtFinalTotal"" class=""form-control"" value=""0.00"" name=""FinalTotal"" />
                </div>
            </div>
        </div>
    </div>
</fieldset>
<br />
<fieldset>
    <legend>
        Resturant Items
    </legend>
    <div class=""container"">
        <div class=""row"">
            <div class=""col-md-4"">
                <div class=""form-group"">
                    Item ");
#nullable restore
#line 41 "E:\Personal\NCI\Assignment\CPP\Resturant\ResturantApp\ResturantApp\ResturantApp\Views\Home\Index.cshtml"
                    Write(Html.DropDownList("Item", new SelectList(Model.Item2, "ItemId", "ItemName"), new { @class = "form-control" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                </div>
            </div>
            <div class=""col-md-4"">
                <div class=""form-group"">
                    Unit Price <input type=""text"" style=""text-align:right"" readonly id=""txtUnitPrice"" value=""0.00"" name=""UnitPrice"" class=""form-control"" />
                </div>
            </div>
            <div class=""col-md-4"">
                <div class=""form-group"">
                    Quantity <input style=""text-align:right"" type=""text"" id=""txtQuantity"" value=""0.00"" name=""Quantity"" class=""form-control"" />
                </div>
            </div>
            <div class=""col-md-4"">
                <div class=""form-group"">
                    Discount <input style=""text-align:right"" type=""text"" id=""txtDiscount"" value=""0.00"" name=""Discount"" class=""form-control"" />
                </div>
            </div>
            <div class=""col-md-4"">
                <div class=""form-group"">
                    Total <input type=""text"" style=""text-align:right"" readonly id=""txtTot");
            WriteLiteral(@"al"" value=""0.00"" name=""Total"" class=""form-control"" />
                </div>
            </div>
            <div class=""col-md-4"">
                <div class=""form-group"">
                    <input type=""button"" id=""btnAddToList"" value=""Add To List"" name=""AddToList"" class=""btn btn-success"" style=""margin-top:25px"" />
                </div>
            </div>

        </div>
    </div>
</fieldset>
<br />
<fieldset>
    <legend>
        Resturant Listed Items
    </legend>
    <table style=""width:100%"" id=""tblItemList"">
        <thead>
            <tr>
                <th hidden>
                    Item Id
                </th>
                <th>
                    Item Name
                </th>
                <th>
                    Unit Price
                </th>
                <th>
                    Quantity
                </th>
                <th>
                    Discount
                </th>
                <th>
                    Total
              ");
            WriteLiteral(@"  </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
    </table>
</fieldset>

<div style=""margin-top:10px"">
    <input data-backdrop=""static"" data-keydrop=""false"" data-toggle=""modal"" data-target=""#divPayments"" type=""button"" id=""btnCheckOut"" class=""btn btn-primary"" value=""CheckOut"" name=""CheckOut"" style=""float:right"" />
</div>

<div id=""divPayments"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Payment</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                <div class=""container"">
                    <div class=""row"">
                        <div class=""form-group col-md-6"">
                            Total: <input style=""text-align:right"" type=""text"" id=""txtPaymentTotal"" readonly valu");
            WriteLiteral(@"e=""0"" class=""form-control"" />
                        </div>
                        <div class=""form-group col-md-6"">
                            Payment Amount:  <input style=""text-align:right"" type=""text"" id=""txtPaymentAmount"" value=""0.00"" class=""form-control"" />
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""form-group col-md-6"">
                            Return Total: <input type=""text"" style=""text-align:right"" id=""txtReturnTotal"" value=""0"" class=""form-control"" />
                        </div>
                        <div class=""form-group col-md-6"">
                            Balance Amount: <input type=""text"" style=""text-align:right"" id=""txtBalance"" readonly value=""0.00"" class=""form-control"" />
                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button class=""btn btn-success"" id=""btnPayment"" disa");
            WriteLiteral("bled value=\"Payment\">Payment</button>\r\n                <button class=\"btn btn-danger\" id=\"btnClose\" data-dismiss=\"modal\" value=\"Payment\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script>

        $(function () {
            $(""#Item"").change(function() {
                var itmeId = $(""#Item"").val();
                getItemUnitPrice(itmeId);
            });


            $(""input[type=text]"").change(function () {
                calcualteSubTotal();
            });

            $(""input[type=text]"").keyup(function () {
                CalculateBalance();
            });


            $(""#btnAddToList"").click(function () {
                AddItemsToList();
            });

            $(""#btnPayment"").click(function () {
                FinalPayment();
            });

            function FinalPayment() {
                var customer = $(""#Customer"").val();
                var paymentid = $(""#Payment"").val();
                var Famount = $(""#txtFinalTotal"").val();
                let lstOrderDetails = [];

                $(""#tblItemList"").find(""tr:gt(0)"").each(function () {
                    var Orderdetail = {
                        Ite");
                WriteLiteral(@"mId: parseFloat($(this).find(""td:eq(0)"").text()),
                        UnitPrice: parseFloat($(this).find(""td:eq(2)"").text()),
                        Quantity: parseFloat($(this).find(""td:eq(3)"").text()),
                        Discount: parseFloat($(this).find(""td:eq(4)"").text()),
                        Total: parseFloat($(this).find(""td:eq(5)"").text()),
                    };
                    lstOrderDetails.push(Orderdetail);
                });

                var dataCollection = {
                    CustomerId:customer,
                    PaymentTypeId:paymentid,
                    FinalTotal:Famount,
                    itemName: """",
                    lstOrderDetails: lstOrderDetails
                };

                $.ajax({
                    async: true,
                    type: ""POST"",
                    dataType: ""JSON"",
                    contentType: ""application/json; charset-utf-8;"",
                    data: JSON.stringify(dataCollection),
         ");
                WriteLiteral("           url: \"");
#nullable restore
#line 206 "E:\Personal\NCI\Assignment\CPP\Resturant\ResturantApp\ResturantApp\ResturantApp\Views\Home\Index.cshtml"
                     Write(Url.Action("Index", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    success: function (data) {
                        alert(data);
                    },
                    error: function () {
                        alert(""Error occured adding order"");
                    }
                });
            }

            function AddItemsToList() {
                var tblItemList = $(""#tblItemList"");
                var unitPrice = $(""#txtUnitPrice"").val();
                var quantity = $(""#txtQuantity"").val();
                var discount = $(""#txtDiscount"").val();
                var itemId = $(""#Item"").val();
                var itemName = $(""#Item option:selected"").text();
                var total = (unitPrice * quantity) - discount;

                var itemList = ""<tr> <td hidden>"" +
                    itemId +
                    ""</td><td>"" +
                    itemName +
                    ""</td><td>"" +
                    parseFloat(unitPrice).toFixed(2) +
                    ""</td><td>"" +
                    ");
                WriteLiteral(@"parseFloat(quantity).toFixed(2) +
                    ""</td><td>"" +
                    parseFloat(discount).toFixed(2) +
                    ""</td><td>"" +
                    parseFloat(total).toFixed(2) +
                    ""</td><td> <input type='button' value='Remove' name='Remove' class='btn btn-danger' onclick='RemoveItem(this)' /> </td></tr>"";

                tblItemList.append(itemList);
                finalItemTotal();
                ResetFields();
            }

            function CalculateBalance()
            {
                var finalAmount = $(""#txtPaymentTotal"").val();
                var paymentAmount = $(""#txtPaymentAmount"").val();
                var returnTotal = $(""#txtReturnTotal"").val();

                var balanceAmount = parseFloat(finalAmount) - parseFloat(paymentAmount) + parseFloat(returnTotal)
                $(""#txtBalance"").val(parseFloat(balanceAmount).toFixed(2));

                if (parseFloat(balanceAmount) == 0) {
                    $(""#btnPay");
                WriteLiteral(@"ment"").removeAttr(""disabled"");
                }
                else {
                    $(""#btnPayment"").attr(""disabled"", ""disabled"");
                }

            }

            function finalItemTotal() {
               // $(""#txtFinalTotal"").val('0.00');
                let finalTotal = 0.00;
                $(""#tblItemList"").find(""tr:gt(0)"").each(function () {
                    var total = parseFloat($(this).find(""td:eq(5)"").text());
                    finalTotal += total;
                });

                $(""#txtFinalTotal"").val(parseFloat(finalTotal).toFixed(2));
                $(""#txtPaymentTotal"").val(parseFloat(finalTotal).toFixed(2));
                $(""#txtBalance"").val(parseFloat(finalTotal).toFixed(2));

            }

            function ResetFields() {
                $(""#txtUnitPrice"").val('');
                $(""#txtQuantity"").val('');
                $(""#txtDiscount"").val('0.00');
                $(""#txtTotal"").val('');
                $(""#Item"").val(");
                WriteLiteral(@"0);
            }

            function getItemUnitPrice(itemid) {
                $.ajax({
                    async: true,
                    type: ""GET"",
                    dataType: ""JSON"",
                    contentType: ""application/json; charset-utf-8;"",
                    data: { itemId : itemid },
                    url: """);
#nullable restore
#line 291 "E:\Personal\NCI\Assignment\CPP\Resturant\ResturantApp\ResturantApp\ResturantApp\Views\Home\Index.cshtml"
                     Write(Url.Action("getItemUnitPrice", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    success: function (data) {
                        $(""#txtUnitPrice"").val(parseFloat(data).toFixed(2));
                    },
                    error: function () {
                        alert(""Error occured"");
                    }
                });
            }

            function calcualteSubTotal() {
                var unitPrice = $(""#txtUnitPrice"").val();
                var quantity = $(""#txtQuantity"").val();
                var discount = $(""#txtDiscount"").val();

                var total = (unitPrice * quantity) - discount;

                $(""#txtTotal"").val(parseFloat(total).toFixed(2));

            }
        });

        function RemoveItem(itemId) {
            $(itemId).closest('tr').remove();
        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Tuple<IEnumerable<Resturant.Common.Customers>, IEnumerable<Resturant.Common.Items>, IEnumerable<Resturant.Common.PaymentTypes>>> Html { get; private set; }
    }
}
#pragma warning restore 1591
